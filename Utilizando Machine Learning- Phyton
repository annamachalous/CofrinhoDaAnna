{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPyX+ES473FDn8xYnyW/eBL",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/annamachalous/CofrinhoDaAnna/blob/main/Utilizando%20Machine%20Learning-%20Phyton\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xvcOLBzSkQ5w",
        "outputId": "0d15c066-61ea-4421-8049-0c7afc0ebe92"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Acurácia: 0.74\n"
          ]
        }
      ],
      "source": [
        "# importando bibliotecas\n",
        "import pandas as pd\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.svm import LinearSVC\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "url =\"https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv\"\n",
        "df = pd.read_csv(url)\n",
        "df.head()\n",
        "\n",
        "df = df[['Survived', 'Pclass', 'Sex', 'Age']].dropna()\n",
        "\n",
        "#Transformar 'Sex' em número\n",
        "df['Sex'] = df['Sex'].map({'male': 0, 'female': 1})\n",
        "\n",
        "# Separar X e Y\n",
        "x = df[['Pclass', 'Sex', 'Age']] # variavel de entrada\n",
        "y = df ['Survived'] # o que queremos prever\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split( x, y, test_size=0.2, random_state=42\n",
        ")\n",
        "\n",
        "\n",
        "#Criando modelo\n",
        "modelo = LinearSVC()\n",
        "modelo.fit(X_train, y_train)\n",
        "\n",
        "#Fazendo previsões\n",
        "y_pred = modelo.predict(X_test)\n",
        "\n",
        "# Avaliando o modelo\n",
        "acuracia = accuracy_score(y_test, y_pred)\n",
        "print(f\"Acurácia: {acuracia:.2f}\")\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "xciQIYxWqHuY"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}